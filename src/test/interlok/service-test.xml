<service-test>
  <unique-id>testing-expressions-processing</unique-id>
  <test-client class="embedded-jmx-test-client"/>
  <helpers/>
  <test-list>
    <unique-id>expressions-processing</unique-id>
    <test>
      <unique-id>add-two-numbers@addition</unique-id>
      <test-case>
        <unique-id>test-add-two-expression</unique-id>
        <input-message-provider>
          <metadata-provider class="inline-metadata-provider">
            <metadata>
              <key-value-pair>
                <key>num1</key>
                <value>10</value>
              </key-value-pair>
              <key-value-pair>
                <key>num2</key>
                <value>15</value>
              </key-value-pair>
            </metadata>
          </metadata-provider>
          <payload-provider class="empty-payload-provider"/>
        </input-message-provider>
        <assertions>
          <assert-metadata-contains>
            <metadata>
              <key-value-pair>
                <key>expressionResult</key>
                <value>25</value>
              </key-value-pair>
            </metadata>
          </assert-metadata-contains>
        </assertions>
      </test-case>
      <service-to-test>
        <source class="file-source">
          <file>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</file>
        </source>
        <preprocessors>
          <service-unique-id-preprocessor>
            <channel>expressions-processing</channel>
            <workflow>addition</workflow>
            <service>add-two-numbers</service>
          </service-unique-id-preprocessor>
        </preprocessors>
      </service-to-test>
    </test>
    <test>
      <unique-id>minus-two-numbers@subtraction</unique-id>
      <test-case>
        <unique-id>test-minus-two-expression</unique-id>
        <input-message-provider>
          <metadata-provider class="inline-metadata-provider">
            <metadata>
              <key-value-pair>
                <key>num1</key>
                <value>10</value>
              </key-value-pair>
              <key-value-pair>
                <key>num2</key>
                <value>7</value>
              </key-value-pair>
            </metadata>
          </metadata-provider>
          <payload-provider class="empty-payload-provider"/>
        </input-message-provider>
        <assertions>
          <assert-metadata-contains>
            <metadata>
              <key-value-pair>
                <key>expressionResult</key>
                <value>3</value>
              </key-value-pair>
            </metadata>
          </assert-metadata-contains>
        </assertions>
      </test-case>
      <service-to-test>
        <source class="file-source">
          <file>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</file>
        </source>
        <preprocessors>
          <service-unique-id-preprocessor>
            <channel>expressions-processing</channel>
            <workflow>subtraction</workflow>
            <service>minus-two-numbers</service>
          </service-unique-id-preprocessor>
        </preprocessors>
      </service-to-test>
    </test>
    <test>
      <unique-id>divide-two-numbers@division</unique-id>
      <test-case>
        <unique-id>test-divide-two-expression</unique-id>
        <input-message-provider>
          <metadata-provider class="inline-metadata-provider">
            <metadata>
              <key-value-pair>
                <key>num1</key>
                <value>20</value>
              </key-value-pair>
              <key-value-pair>
                <key>num2</key>
                <value>10</value>
              </key-value-pair>
            </metadata>
          </metadata-provider>
          <payload-provider class="empty-payload-provider"/>
        </input-message-provider>
        <assertions>
          <assert-metadata-contains>
            <metadata>
              <key-value-pair>
                <key>expressionResult</key>
                <value>2</value>
              </key-value-pair>
            </metadata>
          </assert-metadata-contains>
        </assertions>
      </test-case>
      <service-to-test>
        <source class="file-source">
          <file>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</file>
        </source>
        <preprocessors>
          <service-unique-id-preprocessor>
            <channel>expressions-processing</channel>
            <workflow>division</workflow>
            <service>divide-two-numbers</service>
          </service-unique-id-preprocessor>
        </preprocessors>
      </service-to-test>
    </test>
    <test>
      <unique-id>multiply-two-numbers@multiplication</unique-id>
      <test-case>
        <unique-id>test-times-two-expression</unique-id>
        <input-message-provider>
          <metadata-provider class="inline-metadata-provider">
            <metadata>
              <key-value-pair>
                <key>num1</key>
                <value>10</value>
              </key-value-pair>
              <key-value-pair>
                <key>num2</key>
                <value>5</value>
              </key-value-pair>
            </metadata>
          </metadata-provider>
          <payload-provider class="empty-payload-provider"/>
        </input-message-provider>
        <assertions>
          <assert-metadata-contains>
            <metadata>
              <key-value-pair>
                <key>expressionResult</key>
                <value>50</value>
              </key-value-pair>
            </metadata>
          </assert-metadata-contains>
        </assertions>
      </test-case>
      <service-to-test>
        <source class="file-source">
          <file>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</file>
        </source>
        <preprocessors>
          <service-unique-id-preprocessor>
            <channel>expressions-processing</channel>
            <workflow>multiplication</workflow>
            <service>multiply-two-numbers</service>
          </service-unique-id-preprocessor>
        </preprocessors>
      </service-to-test>
    </test>
    <test>
      <unique-id>is-number1-greater-than-number2@greater-than</unique-id>
      <test-case>
        <unique-id>test-gt</unique-id>
        <input-message-provider>
          <metadata-provider class="inline-metadata-provider">
            <metadata>
              <key-value-pair>
                <key>num1</key>
                <value>10</value>
              </key-value-pair>
              <key-value-pair>
                <key>num2</key>
                <value>5</value>
              </key-value-pair>
            </metadata>
          </metadata-provider>
          <payload-provider class="empty-payload-provider"/>
        </input-message-provider>
        <assertions>
          <assert-metadata-contains>
            <metadata>
              <key-value-pair>
                <key>expressionResult</key>
                <value>true</value>
              </key-value-pair>
            </metadata>
          </assert-metadata-contains>
        </assertions>
      </test-case>
      <test-case>
        <unique-id>test-gt-false</unique-id>
        <input-message-provider>
          <metadata-provider class="inline-metadata-provider">
            <metadata>
              <key-value-pair>
                <key>num1</key>
                <value>5</value>
              </key-value-pair>
              <key-value-pair>
                <key>num2</key>
                <value>10</value>
              </key-value-pair>
            </metadata>
          </metadata-provider>
          <payload-provider class="empty-payload-provider"/>
        </input-message-provider>
        <assertions>
          <assert-metadata-contains>
            <metadata>
              <key-value-pair>
                <key>expressionResult</key>
                <value>false</value>
              </key-value-pair>
            </metadata>
          </assert-metadata-contains>
        </assertions>
      </test-case>
      <service-to-test>
        <source class="file-source">
          <file>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</file>
        </source>
        <preprocessors>
          <service-unique-id-preprocessor>
            <channel>expressions-processing</channel>
            <workflow>greater-than</workflow>
            <service>is-number1-greater-than-number2</service>
          </service-unique-id-preprocessor>
        </preprocessors>
      </service-to-test>
    </test>
    <test>
      <unique-id>is-number1-less-than-or-equal-to-number2@less-than-or-equal-to</unique-id>
      <test-case>
        <unique-id>test-lteq</unique-id>
        <input-message-provider>
          <metadata-provider class="inline-metadata-provider">
            <metadata>
              <key-value-pair>
                <key>num1</key>
                <value>5</value>
              </key-value-pair>
              <key-value-pair>
                <key>num2</key>
                <value>10</value>
              </key-value-pair>
            </metadata>
          </metadata-provider>
          <payload-provider class="empty-payload-provider"/>
        </input-message-provider>
        <assertions>
          <assert-metadata-contains>
            <metadata>
              <key-value-pair>
                <key>expressionResult</key>
                <value>true</value>
              </key-value-pair>
            </metadata>
          </assert-metadata-contains>
        </assertions>
      </test-case>
      <test-case>
        <unique-id>test-lteq-false</unique-id>
        <input-message-provider>
          <metadata-provider class="inline-metadata-provider">
            <metadata>
              <key-value-pair>
                <key>num1</key>
                <value>10</value>
              </key-value-pair>
              <key-value-pair>
                <key>num2</key>
                <value>5</value>
              </key-value-pair>
            </metadata>
          </metadata-provider>
          <payload-provider class="empty-payload-provider"/>
        </input-message-provider>
        <assertions>
          <assert-metadata-contains>
            <metadata>
              <key-value-pair>
                <key>expressionResult</key>
                <value>false</value>
              </key-value-pair>
            </metadata>
          </assert-metadata-contains>
        </assertions>
      </test-case>
      <service-to-test>
        <source class="file-source">
          <file>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</file>
        </source>
        <preprocessors>
          <service-unique-id-preprocessor>
            <channel>expressions-processing</channel>
            <workflow>less-than-or-equal-to</workflow>
            <service>is-number1-less-than-or-equal-to-number2</service>
          </service-unique-id-preprocessor>
        </preprocessors>
      </service-to-test>
    </test>
    <test>
      <unique-id>is-number1-equal-to-number2@equal-to</unique-id>
      <test-case>
        <unique-id>test-eq</unique-id>
        <input-message-provider>
          <metadata-provider class="inline-metadata-provider">
            <metadata>
              <key-value-pair>
                <key>num1</key>
                <value>10</value>
              </key-value-pair>
              <key-value-pair>
                <key>num2</key>
                <value>10</value>
              </key-value-pair>
            </metadata>
          </metadata-provider>
          <payload-provider class="empty-payload-provider"/>
        </input-message-provider>
        <assertions>
          <assert-metadata-contains>
            <metadata>
              <key-value-pair>
                <key>expressionResult</key>
                <value>true</value>
              </key-value-pair>
            </metadata>
          </assert-metadata-contains>
        </assertions>
      </test-case>
      <test-case>
        <unique-id>test-eq-false</unique-id>
        <input-message-provider>
          <metadata-provider class="inline-metadata-provider">
            <metadata>
              <key-value-pair>
                <key>num1</key>
                <value>25</value>
              </key-value-pair>
              <key-value-pair>
                <key>num2</key>
                <value>10</value>
              </key-value-pair>
            </metadata>
          </metadata-provider>
          <payload-provider class="empty-payload-provider"/>
        </input-message-provider>
        <assertions>
          <assert-metadata-contains>
            <metadata>
              <key-value-pair>
                <key>expressionResult</key>
                <value>false</value>
              </key-value-pair>
            </metadata>
          </assert-metadata-contains>
        </assertions>
      </test-case>
      <service-to-test>
        <source class="file-source">
          <file>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</file>
        </source>
        <preprocessors>
          <service-unique-id-preprocessor>
            <channel>expressions-processing</channel>
            <workflow>equal-to</workflow>
            <service>is-number1-equal-to-number2</service>
          </service-unique-id-preprocessor>
        </preprocessors>
      </service-to-test>
    </test>
  </test-list>
  <test-list>
    <unique-id>free-form-expressions-processing</unique-id>
    <test>
      <unique-id>multiply-three-numbers@multiply-three</unique-id>
      <test-case>
        <unique-id>test-multiply-three-expression</unique-id>
        <input-message-provider>
          <metadata-provider class="inline-metadata-provider">
            <metadata>
              <key-value-pair>
                <key>num1</key>
                <value>10</value>
              </key-value-pair>
              <key-value-pair>
                <key>num2</key>
                <value>5</value>
              </key-value-pair>
              <key-value-pair>
                <key>num3</key>
                <value>2</value>
              </key-value-pair>
            </metadata>
          </metadata-provider>
          <payload-provider class="empty-payload-provider"/>
        </input-message-provider>
        <assertions>
          <assert-metadata-contains>
            <metadata>
              <key-value-pair>
                <key>expressionResult</key>
                <value>100</value>
              </key-value-pair>
            </metadata>
          </assert-metadata-contains>
        </assertions>
      </test-case>
      <service-to-test>
        <source class="file-source">
          <file>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</file>
        </source>
        <preprocessors>
          <service-unique-id-preprocessor>
            <channel>free-form-expressions-processing</channel>
            <workflow>multiply-three</workflow>
            <service>multiply-three-numbers</service>
          </service-unique-id-preprocessor>
        </preprocessors>
      </service-to-test>
    </test>
    <test>
      <unique-id>set-payload@multiply-three</unique-id>
      <test-case>
        <unique-id>test-multiply-three-set-payload</unique-id>
        <input-message-provider>
          <metadata-provider class="inline-metadata-provider">
            <metadata>
              <key-value-pair>
                <key>expressionResult</key>
                <value>100</value>
              </key-value-pair>
            </metadata>
          </metadata-provider>
          <payload-provider class="empty-payload-provider"/>
        </input-message-provider>
        <assertions>
          <assert-payload-equals>
            <payload><![CDATA[100]]></payload>
          </assert-payload-equals>
        </assertions>
      </test-case>
      <service-to-test>
        <source class="file-source">
          <file>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</file>
        </source>
        <preprocessors>
          <service-unique-id-preprocessor>
            <channel>free-form-expressions-processing</channel>
            <workflow>multiply-three</workflow>
            <service>set-payload</service>
          </service-unique-id-preprocessor>
        </preprocessors>
      </service-to-test>
    </test>
  </test-list>
</service-test>